tf_vector <- su_i_j_matrix[,i] < su_ic_vector$SU[seq_len(length(su_i_j_matrix$genes))]
filtered_su_i_j_matrix[,i] <- su_i_j_matrix[,i] * tf_vector
}
}
View(filtered_su_i_j_matrix)
View(su_i_j_matrix)
View(exprs_small)
SU_genes <- gsub('\\.', '-',su_ic_vector_small[,2])
exprs_small <- discretized_exprs[SU_genes ,]
exprs_small[1:100, 1:100]
I <- 'HLA-DRA'
i <- 'HLA-DRA'
gene_i <- as.factor(discretized_exprs[i, ])
gene_i <- as.factor(discretized_exprs[i, ])
gene_i_correlates <- FCBF::get_su(x = exprs_small, y = as.factor(exprs_small[i, ]))
FCBF_genes <- gsub('\\.', '-', fcbf_filtered$gene)
su_i_j_matrix <- data.frame(genes =  SU_genes)
# this can surely be improved for speed.
for (i in SU_genes) {
print(i)
gene_i <- as.factor(discretized_exprs[i, ])
gene_i_correlates <- FCBF::get_su(x = exprs_small, y = as.factor(exprs_small[i, ]))
gene_i_correlates$gene <- rownames(gene_i_correlates)
gene_i_correlates <- gene_i_correlates[match(su_i_j_matrix$genes,gene_i_correlates$gene),]
colnames(gene_i_correlates)[1] <- i
su_i_j_matrix[, i] <- gene_i_correlates[,1]
}
View(su_i_j_matrix)
i <- 'HLA-DRA'
as.factor(exprs_small[i, ])
FCBF::get_su(x = exprs_small, y = as.factor(exprs_small[i, ]))
gene_i_correlates <- FCBF::get_su(x = exprs_small, y = as.factor(exprs_small[i, ]))
gene_i_correlates$gene <- rownames(gene_i_correlates)
View(gene_i_correlates)
su_i_j_matrix <- data.frame(genes =  SU_genes)
# this can surely be improved for speed.
for (i in SU_genes) {
print(i)
gene_i <- as.factor(discretized_exprs[i, ])
gene_i_correlates <- FCBF::get_su(x = exprs_small, y = as.factor(exprs_small[i, ]))
gene_i_correlates$gene <- gsub('\\.', '-',rownames(gene_i_correlates))
gene_i_correlates <- gene_i_correlates[match(su_i_j_matrix$genes,gene_i_correlates$gene),]
colnames(gene_i_correlates)[1] <- i
su_i_j_matrix[, i] <- gene_i_correlates[,1]
}
filtered_su_i_j_matrix <- data.frame(genes =  SU_genes)
for (i in colnames(su_i_j_matrix[,-1])){
print(i)
if (all(su_ic_vector$gene[seq_len(length(su_i_j_matrix$genes))] == su_i_j_matrix$genes)){
tf_vector <- su_i_j_matrix[,i] < su_ic_vector$SU[seq_len(length(su_i_j_matrix$genes))]
filtered_su_i_j_matrix[,i] <- su_i_j_matrix[,i] * tf_vector
}
}
View(filtered_su_i_j_matrix)
View(su_i_j_matrix)
tf_vector <- su_i_j_matrix[,i] < su_ic_vector$SU[seq_len(length(su_i_j_matrix$genes))]
su_i_j_matrix[,i] * tf_vector
filtered_su_i_j_matrix[,i] <- su_i_j_matrix[,i] * tf_vector
View(filtered_su_i_j_matrix)
all(su_ic_vector$gene[seq_len(length(su_i_j_matrix$genes))] == su_i_j_matrix$genes)
su_ic_vector$gene[seq_len(length(su_i_j_matrix$genes))]
su_i_j_matrix$genes
(all(as.factor(su_ic_vector$gene[seq_len(length(su_i_j_matrix$genes))]) == su_i_j_matrix$genes)
all(as.factor(su_ic_vector$gene[seq_len(length(su_i_j_matrix$genes))]) == su_i_j_matrix$genes
)
su_ic_vector$gene[seq_len(length(su_i_j_matrix$genes))]
filtered_su_i_j_matrix <- data.frame(genes =  SU_genes)
for (i in colnames(su_i_j_matrix[,-1])){
print(i)
if (all(su_ic_vector$gene[seq_len(length(su_i_j_matrix$genes))] == as.character(su_i_j_matrix$genes))){
tf_vector <- su_i_j_matrix[,i] < su_ic_vector$SU[seq_len(length(su_i_j_matrix$genes))]
filtered_su_i_j_matrix[,i] <- su_i_j_matrix[,i] * tf_vector
}
}
su_ic_vector$gene[seq_len(length(su_i_j_matrix$genes))]
s.character(su_i_j_matrix$genes)
as.character(su_i_j_matrix$genes)
filtered_su_i_j_matrix <- data.frame(genes =  SU_genes)
for (i in colnames(su_i_j_matrix[,-1])){
print(i)
if (all(gsub("\\.", "-",su_ic_vector$gene[seq_len(length(su_i_j_matrix$genes))]) == as.character(su_i_j_matrix$genes))){
tf_vector <- su_i_j_matrix[,i] < su_ic_vector$SU[seq_len(length(su_i_j_matrix$genes))]
filtered_su_i_j_matrix[,i] <- su_i_j_matrix[,i] * tf_vector
}
}
View(filtered_su_i_j_matrix)
su_i_j_matrix[,i]
i <- 'CSTT3'
i <- 'CST3'
su_i_j_matrix[,i]
su_ic_vector$SU[seq_len(length(su_i_j_matrix$genes))]
filtered_su_i_j_matrix <- data.frame(genes =  SU_genes)
for (i in colnames(su_i_j_matrix[,-1])){
print(i)
if (all(gsub("\\.", "-",su_ic_vector$gene[seq_len(length(su_i_j_matrix$genes))]) == as.character(su_i_j_matrix$genes))){
tf_vector <- su_i_j_matrix[,i] > su_ic_vector$SU[seq_len(length(su_i_j_matrix$genes))]
filtered_su_i_j_matrix[,i] <- su_i_j_matrix[,i] * tf_vector
}
}
View(filtered_su_i_j_matrix)
list_of_fcbf_modules <- list()
for (seed in fcbf_filtered$gene){
print(seed)
module_members <- c()
for(j in SU_genes){
su1 <- FCBF::SU(as.factor(exprs_small[seed,]), as.factor(exprs_small[j,] ))
su2 <- FCBF::SU(as.factor(exprs_small[j,]), target )
if (su1 > su2){
module_members <- c(module_members,j)
}
}
list_of_fcbf_modules[[seed]] <- module_members
}
View(list_of_fcbf_modules)
as.factor(
SU_genes
print(seed)
fcbf_filtered$gene
filtered_su_i_j_matrix[,'CD3D']
fcbf_filtered <- FCBF::fcbf(discretized_exprs, target, thresh = 0.1, verbose = T)
View(fcbf_filtered)
fcbf_filtered$gene <- rownames(fcbf_filtered)
FCBF_genes <- gsub('\\.', '-', fcbf_filtered$gene)
# get the SU scores
su_ic_vector <- FCBF::get_su(discretized_exprs, target)
su_ic_vector$gene <- rownames(su_ic_vector)
colnames(su_ic_vector)[1] <- 'SU'
fcbf_filtered <- FCBF::fcbf(discretized_exprs, target, thresh = 0.1, verbose = T)
fcbf_filtered$gene <- rownames(fcbf_filtered)
FCBF_genes <- gsub('\\.', '-', fcbf_filtered$gene)
FCBF::su_plot(discretized_exprs,target)
SU_threshold <- 0.2
su_ic_vector_small <- su_ic_vector[su_ic_vector$SU > SU_threshold,]
SU_genes <- gsub('\\.', '-',su_ic_vector_small[,2])
exprs_small <- discretized_exprs[SU_genes ,]
su_i_j_matrix <- data.frame(genes =  SU_genes)
# this can surely be improved for speed.
for (i in SU_genes) {
print(i)
gene_i <- as.factor(discretized_exprs[i, ])
gene_i_correlates <- FCBF::get_su(x = exprs_small, y = as.factor(exprs_small[i, ]))
gene_i_correlates$gene <- gsub('\\.', '-',rownames(gene_i_correlates))
gene_i_correlates <- gene_i_correlates[match(su_i_j_matrix$genes,gene_i_correlates$gene),]
colnames(gene_i_correlates)[1] <- i
su_i_j_matrix[, i] <- gene_i_correlates[,1]
}
filtered_su_i_j_matrix <- data.frame(genes =  SU_genes)
for (i in colnames(su_i_j_matrix[,-1])){
print(i)
if (all(gsub("\\.", "-",su_ic_vector$gene[seq_len(length(su_i_j_matrix$genes))]) == as.character(su_i_j_matrix$genes))){
tf_vector <- su_i_j_matrix[,i] > su_ic_vector$SU[seq_len(length(su_i_j_matrix$genes))]
filtered_su_i_j_matrix[,i] <- su_i_j_matrix[,i] * tf_vector
}
}
list_of_fcbf_modules <- list()
for (seed in FCBF_genes){
print(seed)
module_members <- c()
for(j in SU_genes){
su1 <- FCBF::SU(as.factor(exprs_small[seed,]), as.factor(exprs_small[j,] ))
su2 <- FCBF::SU(as.factor(exprs_small[j,]), target )
if (su1 > su2){
module_members <- c(module_members,j)
}
}
list_of_fcbf_modules[[seed]] <- module_members
}
View(list_of_fcbf_modules)
list_of_fcbf_modules
View(list_of_fcbf_modules)
devtools::install_github('lubianat/FCBF')
library(FCBF)
library(Seurat)
library(dplyr)
library(igraph)
pbmc <- readRDS("./data/pbmc_tutorial.rds")
exprs <- as.data.frame(as.matrix(pbmc@data))
target <- as.factor(pbmc@ident)
#devtools::install_github('lubianat/FCBF')
library(FCBF)
library(Seurat)
library(dplyr)
library(igraph)
pbmc <- readRDS("./data/pbmc_tutorial.rds")
exprs <- as.data.frame(as.matrix(pbmc@data))
target <- as.factor(pbmc@ident)
set.seed(3)
discretized_exprs <- FCBF::discretize_exprs_supervised(exprs, target)
# get the SU scores
su_ic_vector <- FCBF::get_su(discretized_exprs, target)
su_ic_vector$gene <- rownames(su_ic_vector)
colnames(su_ic_vector)[1] <- 'SU'
fcbf_filtered <- FCBF::fcbf(discretized_exprs, target, thresh = 0.1, verbose = T)
fcbf_filtered$gene <- rownames(fcbf_filtered)
FCBF_genes <- gsub('\\.', '-', fcbf_filtered$gene)
FCBF::su_plot(discretized_exprs,target)
SU_threshold <- 0.1
su_ic_vector_small <- su_ic_vector[su_ic_vector$SU > SU_threshold,]
SU_genes <- gsub('\\.', '-',su_ic_vector_small[,2])
exprs_small <- discretized_exprs[SU_genes ,]
su_i_j_matrix <- data.frame(genes =  SU_genes)
# this can surely be improved for speed.
for (i in SU_genes) {
print(i)
gene_i <- as.factor(discretized_exprs[i, ])
gene_i_correlates <- FCBF::get_su(x = exprs_small, y = as.factor(exprs_small[i, ]))
gene_i_correlates$gene <- gsub('\\.', '-',rownames(gene_i_correlates))
gene_i_correlates <- gene_i_correlates[match(su_i_j_matrix$genes,gene_i_correlates$gene),]
colnames(gene_i_correlates)[1] <- i
su_i_j_matrix[, i] <- gene_i_correlates[,1]
}
filtered_su_i_j_matrix <- data.frame(genes =  SU_genes)
for (i in colnames(su_i_j_matrix[,-1])){
print(i)
if (all(gsub("\\.", "-",su_ic_vector$gene[seq_len(length(su_i_j_matrix$genes))]) == as.character(su_i_j_matrix$genes))){
tf_vector <- su_i_j_matrix[,i] > su_ic_vector$SU[seq_len(length(su_i_j_matrix$genes))]
filtered_su_i_j_matrix[,i] <- su_i_j_matrix[,i] * tf_vector
}
}
View(filtered_su_i_j_matrix)
library(igraph)
g <- igraph::from_incidence_matrix(as.matrix(filtered_su_i_j_matrix[,-1]))
plot(g)
net <- igraph::from_incidence_matrix(as.matrix(filtered_su_i_j_matrix[,-1]))
plot(net, edge.arrow.size=.4, edge.curved=.1)
View(net)
edges(net)
View(filtered_su_i_j_matrix)
View(filtered_su_i_j_matrix[,1])
View(filtered_su_i_j_matrix[,-1])
rownames(filtered_su_i_j_matrix) <- filtered_su_i_j_matrix$genes
adj <- as.matrix(filtered_su_i_j_matrix[,-1])
net <- from_adjacency(adj)
plot(net, edge.arrow.size=.4, edge.curved=.1)
net <- graph_from_adjacency_matrix(adj)
plot(net, edge.arrow.size=.4, edge.curved=.1)
plot(net)
plot(net, edge.arrow.size=.4, edge.curved=.1)
plot(net, edge.color="orange", vertex.color="gray50")
plot(net, layout=layout_with_fr)
l <- layout_with_fr(net.bg)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1)
l <- layout_with_fr(net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1)
par(mfrow=c(2,2), mar=c(0,0,0,0))
plot(net.bg, rescale=F, layout=l*0.4)
plot(net.bg, rescale=F, layout=l*0.6)
plot(net.bg, rescale=F, layout=l*0.8)
plot(net.bg, rescale=F, layout=l*1.0)
net.bg <- net
par(mfrow=c(2,2), mar=c(0,0,0,0))
plot(net.bg, rescale=F, layout=l*0.4)
plot(net.bg, rescale=F, layout=l*0.6)
plot(net.bg, rescale=F, layout=l*0.8)
plot(net.bg, rescale=F, layout=l*1.0)
par(mfrow=c(2,2), mar=c(0,0,0,0))
plot(net.bg, rescale=F, layout=l*0.4)
plot(net.bg, rescale=F, layout=l*0.6)
plot(net.bg, rescale=F, layout=l*0.8)
plot(net.bg, rescale=F, layout=l*10)
net <- graph_from_adjacency_matrix(adj, weighted = T)
plot(net, edge.arrow.size=.4, edge.curved=.1)
net <- simplify(net, remove.multiple = F, remove.loops = T)
plot(net, edge.arrow.size=.4, edge.curved=.1)
net <- graph_from_adjacency_matrix(adj, weighted = T)
plot(net, edge.arrow.size=.4, edge.curved=.1)
net <- simplify(net, remove.multiple = F, remove.loops = T)
plot(net, edge.arrow.size=.4, edge.curved=.1)
net <- graph_from_adjacency_matrix(adj, weighted = T, mode = undirected)
net <- graph_from_adjacency_matrix(adj, weighted = T, mode = 'undirected')
net <- simplify(net, remove.multiple = F, remove.loops = T)
plot(net, edge.arrow.size=.4, edge.curved=.1)
plot(net, edge.color="orange", vertex.color="gray50")
l <- layout_with_fr(net)
plot(net, layout=l)
l <- layout_with_fr(net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1)
par(mfrow=c(2,2), mar=c(0,0,0,0))
plot(net, rescale=F, layout=l*0.4)
plot(net, rescale=F, layout=l*0.6)
plot(net, rescale=F, layout=l*0.8)
plot(net, rescale=F, layout=l*1.0)
par(mfrow=c(2,2), mar=c(0,0,0,0))
plot(net, rescale=F, layout=l*0.4)
plot(net, rescale=F, layout=l*0.6)
plot(net, rescale=F, layout=l*0.8)
plot(net, rescale=F, layout=l*1.0)
plot(net, rescale=F, layout=l*2.0)
plot(net, rescale=F, layout=l*2.0)
dev.off()
dev.off()
plot(net, rescale=F, layout=l*2.0)
plot(net, rescale=F, layout=l*1.5)
l <- layout_with_kk(net.bg)
l <- layout_with_kk(net)
plot(net, layout=l)
plot(net, layout=layout_with_lgl)
for (seed in FCBF_genes){
print(seed)
}
for (seed in FCBF_genes){
print(seed)
print(filtered_su_i_j_matrix[,seed])
}
for (seed in FCBF_genes){
print(seed)
print(filtered_su_i_j_matrix[,seed]>0)
}
for (seed in FCBF_genes){
print(seed)
print(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
}
for (seed in FCBF_genes){
print(seed)
print(drop.levels(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0]))
}
for (seed in FCBF_genes){
print(seed)
print(droplevels(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0]))
}
members_of_module <- droplevels(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
adj <- filtered_su_i_j_matrix[members_of_module,members_of_module]
adj <- filtered_su_i_j_matrix[,members_of_module]
members_of_module <- as.character(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
adj <- filtered_su_i_j_matrix[,members_of_module]
members_of_module[!is.na(members_of_module)]
members_of_module <- members_of_module[!is.na(members_of_module)]
adj <- filtered_su_i_j_matrix[,members_of_module]
adj <- filtered_su_i_j_matrix[members_of_module,members_of_module]
adj
seed <- FCBF_genes[1]
print(seed)
members_of_module <- as.character(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
members_of_module <- members_of_module[!is.na(members_of_module)]
adj <- filtered_su_i_j_matrix[members_of_module,members_of_module]
for (seed in FCBF_genes){
print(seed)
members_of_module <- as.character(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
members_of_module <- members_of_module[!is.na(members_of_module)]
adj <- filtered_su_i_j_matrix[members_of_module,members_of_module]
}
adj <- filtered_su_i_j_matrix[members_of_module,members_of_module]
members_of_module <- as.character(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
print(seed)
seed <- FCBF_genes[1]
print(seed)
members_of_module <- as.character(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
members_of_module <- members_of_module[!is.na(members_of_module)]
adj <- filtered_su_i_j_matrix[members_of_module,members_of_module]
for (seed in FCBF_genes[1:10]){
print(seed)
members_of_module <- as.character(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
members_of_module <- members_of_module[!is.na(members_of_module)]
adj <- filtered_su_i_j_matrix[members_of_module,members_of_module]
adj <- as.matrix(adj)
net <- graph_from_adjacency_matrix(adj, weighted = T, mode = 'undirected')
net <- simplify(net, remove.multiple = F, remove.loops = T)
l <- layout_with_fr(net)
print(plot(net, layout=l))
}
for (seed in FCBF_genes[1:10]){
print(seed)
members_of_module <- as.character(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
members_of_module <- members_of_module[!is.na(members_of_module)]
adj <- filtered_su_i_j_matrix[members_of_module,members_of_module]
adj <- as.matrix(adj)
net <- graph_from_adjacency_matrix(adj, weighted = T, mode = 'undirected')
net <- simplify(net, remove.multiple = F, remove.loops = T)
l <- layout_with_fr(net)
plot(net, layout=l)
}
print(seed)
members_of_module <- as.character(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
members_of_module <- members_of_module[!is.na(members_of_module)]
adj <- filtered_su_i_j_matrix[members_of_module,members_of_module]
adj <- as.matrix(adj)
net <- graph_from_adjacency_matrix(adj, weighted = T, mode = 'undirected')
net <- simplify(net, remove.multiple = F, remove.loops = T)
l <- layout_with_fr(net)
plot(net, layout=l)
net <- graph_from_adjacency_matrix(adj, weighted = T, mode = 'undirected')
net <- simplify(net, remove.multiple = F, remove.loops = T)
l <- layout_with_fr(net)
plot(net, layout=l)
plot(net, layout=l)
plot(net, layout=l)
plot(net, layout=l)
for (seed in FCBF_genes[1:10]){
print(seed)
members_of_module <- as.character(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
members_of_module <- members_of_module[!is.na(members_of_module)]
adj <- filtered_su_i_j_matrix[members_of_module,members_of_module]
adj <- as.matrix(adj)
net <- graph_from_adjacency_matrix(adj, weighted = T, mode = 'undirected')
net <- simplify(net, remove.multiple = F, remove.loops = T)
l <- layout_with_fr(net)
plot(net, layout=l)
}
for (seed in FCBF_genes[1:10]){
print(seed)
members_of_module <- as.character(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
members_of_module <- members_of_module[!is.na(members_of_module)]
adj <- filtered_su_i_j_matrix[members_of_module,members_of_module]
adj <- as.matrix(adj)
net <- graph_from_adjacency_matrix(adj, weighted = T, mode = 'undirected')
net <- simplify(net, remove.multiple = F, remove.loops = T)
l <- layout_with_fr(net)
print(plot(net, layout=l))
}
seed <- 'CST3'
members_of_module <- as.character(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
members_of_module <- members_of_module[!is.na(members_of_module)]
adj <- filtered_su_i_j_matrix[members_of_module,members_of_module]
adj <- as.matrix(adj)
net <- graph_from_adjacency_matrix(adj, weighted = T, mode = 'undirected')
net <- simplify(net, remove.multiple = F, remove.loops = T)
l <- layout_with_fr(net)
plot(net, layout=l)
print(seed)
members_of_module <- as.character(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
members_of_module <- members_of_module[!is.na(members_of_module)]
adj <- filtered_su_i_j_matrix[members_of_module,members_of_module]
adj <- as.matrix(adj)
net <- graph_from_adjacency_matrix(adj, weighted = T, mode = 'undirected')
net <- simplify(net, remove.multiple = F, remove.loops = T)
l <- layout_with_fr(net)
plot(net, layout=l)
seed <- 'HLA-DRA'
members_of_module <- as.character(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
members_of_module <- members_of_module[!is.na(members_of_module)]
adj <- filtered_su_i_j_matrix[members_of_module,members_of_module]
adj <- as.matrix(adj)
net <- graph_from_adjacency_matrix(adj, weighted = T, mode = 'undirected')
net <- simplify(net, remove.multiple = F, remove.loops = T)
l <- layout_with_fr(net)
plot(net, layout=l)
plot(net, layout=l, vertex.shape="none")
plot(net, layout=l, vertex.shape="none")
seed <- 'CD3D'
print(seed)
members_of_module <- as.character(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
members_of_module <- members_of_module[!is.na(members_of_module)]
adj <- filtered_su_i_j_matrix[members_of_module,members_of_module]
adj <- as.matrix(adj)
net <- graph_from_adjacency_matrix(adj, weighted = T, mode = 'undirected')
net <- simplify(net, remove.multiple = F, remove.loops = T)
l <- layout_with_fr(net)
plot(net, layout=l)
plot(net, layout=l)
plot(net, layout=l, vertex.shape="none")
plot(net, layout=l, vertex.shape="none")
dev.off()
dev.off()
plot(net, layout=l, vertex.shape="none")
dev.off()
plot(asd)
plot(net, layout=l, vertex.shape="none")
dev.off()
plot(net, layout=l, vertex.shape="none")
pdf('hm.pdf')
for (seed in FCBF_genes[1:10]){
print(seed)
members_of_module <- as.character(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
members_of_module <- members_of_module[!is.na(members_of_module)]
adj <- filtered_su_i_j_matrix[members_of_module,members_of_module]
adj <- as.matrix(adj)
net <- graph_from_adjacency_matrix(adj, weighted = T, mode = 'undirected')
net <- simplify(net, remove.multiple = F, remove.loops = T)
l <- layout_with_fr(net)
print(plot(net, layout=l, vertex.shape="none"))
}
dev.off()
library(igraph)
pdf('hm.pdf')
for (seed in FCBF_genes[1:10]){
print(seed)
members_of_module <- as.character(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
members_of_module <- members_of_module[!is.na(members_of_module)]
adj <- filtered_su_i_j_matrix[members_of_module,members_of_module]
adj <- as.matrix(adj)
net <- graph_from_adjacency_matrix(adj, weighted = T, mode = 'undirected')
net <- simplify(net, remove.multiple = F, remove.loops = T)
l <- layout_with_fr(net)
plot(net, layout=l, vertex.shape="none")
}
dev.off()
pdf('hm.pdf')
for (seed in FCBF_genes[1:10]){
print(seed)
members_of_module <- as.character(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
members_of_module <- members_of_module[!is.na(members_of_module)]
adj <- filtered_su_i_j_matrix[members_of_module,members_of_module]
adj <- as.matrix(adj)
net <- graph_from_adjacency_matrix(adj, weighted = T, mode = 'undirected')
net <- simplify(net, remove.multiple = F, remove.loops = T)
l <- layout_with_fr(net)
plot(net, layout=l, vertex.shape="none")
}
dev.off()
pdf('hm.pdf')
for (seed in FCBF_genes){
print(seed)
members_of_module <- as.character(filtered_su_i_j_matrix$genes[filtered_su_i_j_matrix[,seed]>0])
members_of_module <- members_of_module[!is.na(members_of_module)]
adj <- filtered_su_i_j_matrix[members_of_module,members_of_module]
adj <- as.matrix(adj)
net <- graph_from_adjacency_matrix(adj, weighted = T, mode = 'undirected')
net <- simplify(net, remove.multiple = F, remove.loops = T)
l <- layout_with_fr(net)
plot(net, layout=l, vertex.shape="none")
}
dev.off()
